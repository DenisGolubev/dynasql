/*  Copyright 2012 PerceiveIT Limited
 *  This file is part of the Scryber library.
 *
 *  You can redistribute Scryber and/or modify 
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  Scryber is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public License
 *  along with Scryber source code in the COPYING.txt file.  If not, see <http://www.gnu.org/licenses/>.
 * 
 */

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Scryber {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Errors {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Errors() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Scryber.Errors", typeof(Errors).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream passed to the PDFWriter cannot be written to..
        /// </summary>
        internal static string CannotWriteToThisStream {
            get {
                return ResourceManager.GetString("CannotWriteToThisStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property &apos;{0}&apos; could not be found or accessed for binding. Please check the spelling..
        /// </summary>
        internal static string DatabindingPropertyNotFound {
            get {
                return ResourceManager.GetString("DatabindingPropertyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current databinding source is not an IXPathNavigable object..
        /// </summary>
        internal static string DatabindingSourceNotXPath {
            get {
                return ResourceManager.GetString("DatabindingSourceNotXPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The binding indexer expression &apos;{0}&apos; could not be evaluated..
        /// </summary>
        internal static string InvalidIndexerExpression {
            get {
                return ResourceManager.GetString("InvalidIndexerExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The PDF Name &apos;{0}&apos; contains invalid characters. Please use Alpha numeric characters for names..
        /// </summary>
        internal static string InvalidPDFName {
            get {
                return ResourceManager.GetString("InvalidPDFName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The PDFType can only be initialized with a ASCII string {1} characters long. The string &apos;{0}&apos; is not the correct length..
        /// </summary>
        internal static string TypeStringOnlyNChars {
            get {
                return ResourceManager.GetString("TypeStringOnlyNChars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The XPath expression &apos;{0}&apos; could not be evaluated and returned an error..
        /// </summary>
        internal static string XPathExpressionCouldNotBeEvaluated {
            get {
                return ResourceManager.GetString("XPathExpressionCouldNotBeEvaluated", resourceCulture);
            }
        }
    }
}
